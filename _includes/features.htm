<h3>Easy to understand, to use, to maintain</h3>
<p markdown = "1">Upsilon has been improved over the years to make it easier, and is motivated to get even easier, as so many other orchestrators take hours, days and weeks to understand, use and maintain.</p>

<h3>Distributed, with a fault tolerant, very lightweight control plane</h3>
<p markdown = "1">Execute commands on different servers, and store results in a central database. The results are accessible from the [upsilon-web interface](upsilon-web), or via the command line client.</p>

<h3>Lightweight to start, incredibly easy to scale</h3>
<p markdown = "1">Happily runs on a raspberry Pi, a little laptop, homelab servers, or theoretically thousands of machines.</p>

<h3>Autoconfiguration</h3>
<p markdown = "1">The services that make up upsilon all try to rely on autodiscovery whenever possible, meaning that most services don't need any manual configuration, or very little. </p>

<h3>Use with scripts and commands you already have</h3>
<p markdown = "1">Scripts, shell commands - execute whatever you need with no changed need to work with Upsilon.</p>

<h3>Use a Configuration as Code approach</h3>
<p markdown = "1">Use Modern YAML configuration syntax, with built-in support for pulling updates from Git.</p>

<h3>SQL database</h3>
<p markdown = "1">Upsilon's use of SQL is very lightweight, and would likely work with any SQL database. MySQL is the only one supported at the moment.</p>

